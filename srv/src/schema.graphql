# import Game from "./generated/prisma.graphql"

type Subscription{
  ruleAdded(where: RuleSubscriptionWhereInput): RuleSubscriptionPayload
}

type Query {
  game(gameId: ID!): Game
  games(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Game]!
  rule(where: RuleWhereUniqueInput!): Rule
  rules(me: Boolean, where: RuleWhereInput, orderBy: RuleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Rule]!
  ruleset(where: RulesetWhereUniqueInput!): Ruleset
  rulesets(where: RulesetWhereInput, orderBy: RulesetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ruleset]!
  meRules(gameId: ID!): [Rule]!
  me: User 
}

type Mutation {
  authenticate(idToken: String!): User
  createRule(ruleText: String!, game: String!, categories: [String!]): Rule
  deleteRule(where: RuleWhereUniqueInput!): Rule
  createRuleset(name: String!, game: String!): Ruleset
  deleteRuleset(where: RulesetWhereUniqueInput!): Ruleset
  addRuleToRuleset(ruleId: ID!, rulesetId: ID!): Ruleset
  removeRulesFromRuleset(rulesetId: ID, ruleIds: [ID!]): Ruleset
  createGame(title: String!): Game!
}